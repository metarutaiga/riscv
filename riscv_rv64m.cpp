//==============================================================================
// The RISC-V Instruction Set Manual
// Volume I: Unprivileged ISA
// Document Version 20191213
// December 13, 2019
//==============================================================================

#include "riscv_cpu.h"

//------------------------------------------------------------------------------
#if defined(__i386__) || defined(__amd64__)
__attribute__((optnone))
#endif
void riscv_cpu::MULW()
{
    x[rd] = (int32_t)(x[rs1].s32 * x[rs2].s32);
}
//------------------------------------------------------------------------------
void riscv_cpu::DIVW()
{
#if defined(__i386__) || defined(__amd64__)
    if (x[rs1].s32 == INT32_MIN && x[rs2].s32 == -1)
    {
        x[rd] = x[rs1].s32;
        return;
    }
#endif
    x[rd] = (int32_t)(x[rs2].s32 ? x[rs1].s32 / x[rs2].s32 : -1);
}
//------------------------------------------------------------------------------
void riscv_cpu::DIVUW()
{
    x[rd] = (int32_t)(x[rs2].u32 ? x[rs1].u32 / x[rs2].u32 : UINT32_MAX);
}
//------------------------------------------------------------------------------
void riscv_cpu::REMW()
{
#if defined(__i386__) || defined(__amd64__)
    if (x[rs1].s32 == INT32_MIN && x[rs2].s32 == -1)
    {
        x[rd] = 0;
        return;
    }
#endif
    x[rd] = (int32_t)(x[rs2].s32 ? x[rs1].s32 % x[rs2].s32 : x[rs1].s32);
}
//------------------------------------------------------------------------------
void riscv_cpu::REMUW()
{
    x[rd] = (int32_t)(x[rs2].u32 ? x[rs1].u32 % x[rs2].u32 : x[rs1].u32);
}
//------------------------------------------------------------------------------
